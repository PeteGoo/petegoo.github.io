# This is my picture - You should be drawing your systems and code

For the last few years I've been trying to actively spend more time 
drawing code, architectures and concepts rather than just talking
about them. I feel like this was once a lot more common place in my
workplaces but seems to have become a rarity.

## The problem with words

When I first moved to New Zealand I found myself working for a company
building legal software. On day 1 an architect took me into a room and
started explaining the archicture of the product in the terminology of 
Domain Driven Design (DDD), a concept I had never come across before 
that is packed full of specific terminology and concepts, so many in 
fact that the bible of DDD by Eric Evans is 560 pages of pure gold but
takes quite a few reads before it sinks in. 

Like a typical imposter dev, I wasn't going to admit that a lot of
these so-called words and acronyms where completely foreign to me. 

So how then was I able to understand any of what was being said at 
the time?

Well, this mighty warrior in front of me was brandishing a white board 
marker and wielding it with such finesse that I could let that 
impervious wall of nomenclature wash over me while I gazed upon the 
pretty picture unfolding before my very eyes.

## So why are pictures important

Drawing pictures in front of people is a *room leveller*.

We have so much assumed context when we present to or talk with our peers 
that we often forget that we may have completely different backgrounds
and experiences. For example:

 - We may not all have the same level of confidence in groups 
 - We may not all have the same first spoken language
 - We may not all come from the same social circle / tech / culture or country
 - We may not all have gone to college / university or read the same comprehensive book on exotic and seldom used design patterns

Simple diagrams can transcend these differences. The box that represents a thing.
The line that represents a relationship of some sort, traffic, data or control flow.
A big cloud of amorphous internet. A stick figure user. These shapes describe abstract 
concepts more universally than any specific words could.

## Why is drawing pictures important

Drawing pictures in front of people is a *room leveller*.

There is more intent and meaning communicated in the act of drawing than 
simply just the end product.

I've often had the experience where I've had a successful session with a whiteboard 
and then try to show someone the finished picture expecting them to instantly gain the same 
understanding that I did when it was drawn. Except now, they just look at me blankly. Why?
I may even look back at the drawing and think, this is nonsense. These are the insane 
scribblings of an unhinged individual. 

Watching a drawing unfold in front of you as the intent is explained builds understanding
while leaving the breadcrumbs of how that understanding was formed in full view, reinforcing
it as it is committed to memory. At the same time it allows the performer to add a layer of 
language and terminology on top of that new understanding. 

That newly accumulated understanding, language and terminology will always be rooted in the 
memory of the drawing, rather than the shoes of the presenter, the smell of the room or the 
colour of the walls.

## How to do it

So there are some rules to follow when whiteboarding / drawing for a group

- No UML!!! 
- Limit the predefined shapes. If you need to dray a pipe for a queue, explain what it is and why a pipe works.
- A database might be a cylinder but reinforce what it is as you draw it
- Stick to boxes and lines as much as possible
- Sure, add arrows for direction
- Use colour sparingly. Two, three colours. After that people need a legend.
- No fricking UML!!! Nobody cares that you took the time to learn it once.

## Running an open inclusive session

In our office Friday at 3pm is "This is my picture" time.

 - It lasts an hour
 - We have beer and pizza and 4:30 so people are winding down anyways, might as well maximise on the reluctance people have to start deep thinking.
 - We have a Slack channel where we remind folks that it is on
 - We make a list on the board of carry over items from last week
 - We ask for ideas, these can be any of:
   - Something you want to build
   - Something you have built
   - Something you are building
   - Something that exists
   - Something you can draw
   - Something you want to see someone else draw
   - Something you know
   - Something you want to know
 - List the ideas on the board
 - Now ask for a show of hands on each item in turn
 - Mark the votes beside each item
 - Start with the highest voted item and as for volunteers to draw it
 - If nobody is willing to draw it or it doesn't get enough votes then it can carry over
 - Almost always it spills over in discussion to drinks and pizza
 - Live slack the list of ideas so that stragglers can opt in
 - Take photos of the presenters with the end product. Like a kid holding up their picture to the class. Post them to the Slack channel for posterity.
 - Don't be afraid to repeat ideas weeks later. Try a different presenter. There will be new people present and/or different perspectives in the room.



## FAQ

Q. What about having multiple people working together on a board?
A. Well this is ok for a discussion of two people but is confusing for a group. Try to avoid unless the two presenters have a good collaborative presentation style. You're telling a story after all.

Q. What about remote teams / individuals?
A. Well sometimes we try to do it on hangouts and/or record it. This is _ok_. YMMV

Q. What about digital / online tools
A. Keen to hear about suggestions but these can be prohibitively expensive and clunky.


